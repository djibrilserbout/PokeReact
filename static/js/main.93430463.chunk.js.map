{"version":3,"sources":["Pokedex.js","Pokemon.js","Home.js","reportWebVitals.js","index.js"],"names":["App","useState","type","setType","pokemonType","setPokemonType","pokemons","setPokemons","pokemonsId","setPokemonsId","pokemonsSprite","setPokemonsSprite","pokemonsFirstType","setPokemonsFirstType","pokemonsSecondType","setPokemonsSecondType","scrollTop","setScrollTop","originalpokemons","setoriginalPokemons","namesearch","setNameSearch","offset","setOffset","limit","setLimit","useEffect","fetch","method","then","response","json","responseJson","results","catch","error","alert","JSON","stringify","length","Promise","all","map","item","url","allResponse","id","types","name","sprites","front_default","console","log","offlimit","pokemon","slice","window","scrollTo","changeType","e","target","value","changeLimit","parseInt","handleSearchByName","input","a","newData","filter","itemData","toLowerCase","textData","indexOf","Buttons","className","onClick","onChange","defaultValue","placeholder","Pokedex","index","alt","src","to","Pokemon","match","params","pokemonInfos","setPokemonInfos","evolvesFrom","setEvolvesFrom","evolutionUrl","setEvolutionUrl","generation","setGeneration","setSprites","setTypes","moves","setMoves","items","setItems","description","setDescription","moreMoves","setMoreMoves","moreDesc","setMoreDesc","Evolutions","PokemonInfos","Types","PokemonDescription","version","flavor_text","Sprites","sprites_arr","Object","keys","Moves","Items","move","held_items","undefined","flavor_text_entries","language","evolves_from_species","evolution_chain","Home","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93430463.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Home.css';\r\nimport './Pokedex.css';\r\n\r\n\r\nfunction App() {\r\n    const[type, setType] = useState(\"all\");\r\n    const [pokemonType, setPokemonType] = useState([]);\r\n    const [pokemons, setPokemons] = useState([]);\r\n    const [pokemonsId, setPokemonsId] = useState([]);\r\n    const [pokemonsSprite, setPokemonsSprite] = useState([\"\"]);\r\n    const [pokemonsFirstType, setPokemonsFirstType] = useState([]);\r\n    const [pokemonsSecondType, setPokemonsSecondType] = useState([]);\r\n    const [scrollTop, setScrollTop] = useState(false);\r\n    const [originalpokemons, setoriginalPokemons] = useState([]);\r\n\r\n    const [namesearch, setNameSearch] = useState([\"\"]);\r\n\r\n    const [offset, setOffset] = useState(0);\r\n    const [limit, setLimit] = useState(50);\r\n\r\n    useEffect( () => {\r\n        if (type === \"all\") {\r\n            fetch(`https://pokeapi.co/api/v2/pokemon?offset=${offset}&limit=${limit}`, {\r\n                method: 'GET',\r\n            }).then((response) => response.json())\r\n            .then((responseJson) => {       \r\n                setPokemons(responseJson.results);\r\n                setoriginalPokemons(responseJson.results);\r\n                setScrollTop(true);\r\n            })\r\n            .catch((error) => alert(JSON.stringify(error)));\r\n        }\r\n    \r\n    }, [offset,limit,type]);\r\n\r\n    useEffect( () => {\r\n        if (pokemons.length > 0) {\r\n            Promise.all(pokemons.map((item) => fetch(item.url, {\r\n                method: 'GET',\r\n            }).then((item) => item.json())))\r\n            .then((allResponse) => {\r\n                    setPokemonsId(allResponse.map((item) => item.id));\r\n                    setPokemonsFirstType(allResponse.map((item) => item.types).map((item) => item[0].type.name));\r\n                    setPokemonsSecondType(allResponse.map((item) => item.types).map((item) => item.length === 2 && item[1].type.name));\r\n                    setPokemonsSprite(allResponse.map((item) => item.sprites).map((item) => item.front_default));\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n        }\r\n            \r\n    }, [pokemons]);\r\n\r\n    useEffect( () => {\r\n        if(type !== \"all\") {\r\n            fetch(`https://pokeapi.co/api/v2/type/${type}`, {\r\n                method: 'GET',\r\n            }).then((response) => response.json())\r\n            .then((responseJson) => {\r\n                let offlimit = limit + offset;\r\n            setPokemonType(responseJson.pokemon.slice(offset,offlimit));\r\n            setScrollTop(true);\r\n            console.log(responseJson.pokemon.slice(offset,offlimit))\r\n            console.log(offlimit)\r\n            })\r\n            .catch((error) => alert(JSON.stringify(error)));\r\n        }\r\n    }, [type,offset,limit])\r\n\r\n    useEffect( () => {\r\n            Promise.all(pokemonType.map((item) => fetch(item.pokemon.url, {\r\n                method: 'GET',\r\n            }).then((item) => item.json())))\r\n            .then((allResponse) => {\r\n                    setPokemonsId(allResponse.map((item) => item.id));\r\n                    setPokemonsFirstType(allResponse.map((item) => item.types).map((item) => item[0].type.name));\r\n                    setPokemonsSecondType(allResponse.map((item) => item.types).map((item) => item.length === 2 && item[1].type.name));\r\n                    setPokemonsSprite(allResponse.map((item) => item.sprites).map((item) => item.front_default));\r\n                    setPokemons(allResponse.map((item) => item))\r\n                    setoriginalPokemons(allResponse.map((item) => item))\r\n            })\r\n            .catch((error) => alert(JSON.stringify(error)));\r\n            \r\n    }, [pokemonType])\r\n    useEffect(() => {\r\n        window.scrollTo(0,0);\r\n        setScrollTop(false);\r\n    },[scrollTop])\r\n\r\n    const changeType = e => {\r\n        setType(e.target.value);\r\n        setOffset(0);\r\n    }\r\n    const changeLimit = e => {\r\n        setLimit(parseInt(e.target.value));\r\n    }\r\n\r\n    const handleSearchByName = async (input) =>  {\r\n        setNameSearch(input);\r\n        const newData = originalpokemons.filter(function(item) {\r\n          const itemData = item.name ? item.name.toLowerCase() : ''.toLowerCase();\r\n          const textData = input.toLowerCase();\r\n          return itemData.indexOf(textData) > -1;\r\n        });\r\n        setPokemons(newData);\r\n      }\r\n\r\n    function Buttons() {\r\n        return (\r\n            <nav className=\"navigation\">\r\n                <button className=\"arrow arrow_prev\" onClick={ () => {setOffset(offset => offset > 0 && offset  - limit); setScrollTop(true) }}>Previous</button>\r\n                <div className=\"filters\">\r\n                    <span>Type : </span>\r\n                    <select className=\"type-select\" value={type} onChange={changeType}>\r\n                        <option  defaultValue value=\"all\" > All Types</option>\r\n                        <option value=\"normal\">Normal</option>\r\n                        <option value=\"fighting\">Fighting</option>\r\n                        <option value=\"flying\">Flying</option>\r\n                        <option value=\"poison\">Poison</option>\r\n                        <option value=\"ground\">Ground</option>\r\n                        <option value=\"rock\">Rock</option>\r\n                        <option value=\"bug\">Bug</option>\r\n                        <option value=\"ghost\">Ghost</option>\r\n                        <option value=\"steel\">Steel</option>\r\n                        <option value=\"fire\">Fire</option>\r\n                        <option value=\"water\">Water</option>\r\n                        <option value=\"grass\">Grass</option>\r\n                        <option value=\"electric\">Electric</option>\r\n                        <option value=\"psychic\">Psychic</option>\r\n                        <option value=\"ice\">Ice</option>\r\n                        <option value=\"dragon\">Dragon</option>\r\n                        <option value=\"dark\">Dark</option>\r\n                        <option value=\"fairy\">Fairy</option>\r\n                    </select>\r\n\r\n                    <span> Limit : </span>\r\n                    <select className=\"limit-select\" value={limit} onChange={changeLimit}>\r\n                        <option value=\"10\">10</option>\r\n                        <option value=\"20\">20</option>\r\n                        <option value=\"30\">30</option>\r\n                        <option value=\"40\">40</option>\r\n                        <option defaultValue=\"50\">50</option>\r\n                    </select>\r\n                </div>\r\n                <button className=\"arrow arrow_next\" onClick={ () => { setOffset(offset =>  offset + limit) ; setScrollTop(true) }}>Next</button>\r\n                <input\r\n                    placeholder=\"Pokemon name...\"\r\n                    onChange={(e) => handleSearchByName(e.target.value)}\r\n                    value={namesearch}\r\n                />\r\n            </nav>\r\n        )\r\n    }\r\n\r\n    function Pokedex() {\r\n        return (\r\n            <div className=\"pokedex\">\r\n                { pokemons.map((item, index) =>\r\n                    <div key={index} className=\"pokemon\" >\r\n                        <div className=\"pokemon-sprite\">\r\n                            <img alt={item.name} src={pokemonsSprite[index]}></img>\r\n                        </div>\r\n                        <div className=\"pokemon-infos\">\r\n                            <span>n° { pokemonsId[index] } - </span>\r\n                            <Link className=\"pokemon-name\" to={`/pokemon/${item.name}`}>{ item.name }</Link>\r\n                        </div>\r\n                        <div className=\"pokemon-types\">\r\n                            <div className=\"types\">\r\n                            <span className={pokemonsFirstType[index]}> { pokemonsFirstType[index]  }</span> { pokemonsSecondType[index] && <span className={pokemonsSecondType[index]}>{pokemonsSecondType[index] }</span> }\r\n                            </div>\r\n                           \r\n                        </div>\r\n                    </div>)\r\n                     }                   \r\n            </div>\r\n        )\r\n                   \r\n    }\r\n\r\n    return(\r\n        <div className=\"mainPokedex\">\r\n            <Buttons />\r\n            <Pokedex />\r\n        </div>\r\n\r\n    );\r\n  \r\n  \r\n}\r\n\r\nexport default App;\r\n","import {BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport React, {useEffect, useState, version} from 'react'\r\nimport './Pokemon.css'\r\nimport './Pokedex.css'\r\n\r\nfunction Pokemon({ match }) {\r\n    let name = match.params.id;\r\n    const [pokemonInfos, setPokemonInfos] = useState({});\r\n    const [evolvesFrom, setEvolvesFrom] = useState(\"\");\r\n    const [evolutionUrl, setEvolutionUrl] = useState(\"\");\r\n    const [evolvesTo, setEvolvesTo] = useState(\"\");\r\n\r\n    const [generation, setGeneration] = useState([])\r\n    const [sprites, setSprites] = useState({});\r\n    const [types, setTypes] = useState([]);\r\n    const [moves, setMoves] = useState([]);\r\n    const [items, setItems] = useState([]);\r\n    const [description, setDescription] = useState([])\r\n    const [moreMoves, setMoreMoves] = useState(\"\");\r\n    const [moreDesc, setMoreDesc] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        fetch(`https://pokeapi.co/api/v2/pokemon/${name}`, {\r\n            method:'GET',\r\n        })\r\n        .then((response) => response.json())\r\n        .then((response) => {\r\n            setPokemonInfos(response);\r\n            setTypes(response.types.map(item => item.type))\r\n            setSprites(response.sprites);\r\n            setMoves(response.moves.map((item) => item.move))\r\n            setItems(response.held_items.map(item => item.item))\r\n            // console.log(response)\r\n           \r\n        })\r\n        .catch((error) => console.log(error))\r\n\r\n\r\n    },[name])\r\n\r\n\r\n    useEffect(() => {\r\n        if (pokemonInfos !== undefined) {\r\n        fetch(`https://pokeapi.co/api/v2/pokemon-species/${pokemonInfos[\"id\"]}`, {\r\n            method:'GET',\r\n        })\r\n        .then((response) => response.json())\r\n        .then((response) => {\r\n            setGeneration(response.generation);\r\n            setDescription(response.flavor_text_entries.map(item => (item.language.name === \"en\") && item));\r\n            setEvolvesFrom(response.evolves_from_species)\r\n            setEvolutionUrl(response.evolution_chain.url)\r\n           \r\n        })\r\n        .catch((error) => console.log(error))\r\n    }\r\n    }, [pokemonInfos])\r\n\r\n    useEffect(() => {\r\n        fetch(evolutionUrl, {\r\n            method:'GET',\r\n        })\r\n        .then((response) => response.json())\r\n        .then((response) => {\r\n            console.log(response)   \r\n        })\r\n        .catch((error) => console.log(error))\r\n        \r\n    },[evolutionUrl])\r\n\r\n    \r\nfunction Evolutions() {\r\n\r\n\r\n    if (evolvesFrom) {\r\n    return(\r\n        <div className=\"evolution-container\">\r\n         Evolves from <Link to={`/pokemon/${evolvesFrom.name}`}>{evolvesFrom.name}</Link>\r\n        </div>\r\n    );\r\n    } else {\r\n        return(\r\n        <div className=\"evolution-container\">\r\n            <span>No pre-evolution</span>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction PokemonInfos() {\r\n    return (\r\n        <div className=\"infos-container\">\r\n            <h2>Infos</h2>\r\n            <Types/>\r\n            <div className=\"pokemon-id\">\r\n                <span>n° - {pokemonInfos[\"id\"]}</span>\r\n            </div>\r\n    \r\n            <div className=\"pokemon-generation\">\r\n                <span>Géneration : {generation.name}</span>\r\n            </div>\r\n            <div className=\"pokemon-height\">\r\n                <span>Height : {pokemonInfos[\"height\"]}</span>\r\n            </div>\r\n            <div className=\"pokemon-weight\">\r\n                <span>Weight : {pokemonInfos[\"weight\"]}</span>\r\n            </div>\r\n            <div className=\"pokemon-base_experience\">\r\n                <span>Base experience : {pokemonInfos[\"base_experience\"]}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nfunction PokemonDescription() {\r\n    return(\r\n        <div className=\"pokemon-description \">\r\n            <div className=\"title\">\r\n                <h2>Descriptions</h2>\r\n                <button onClick={() => moreDesc !== \"more\" ? setMoreDesc(\"more\") : setMoreDesc(null)}>{moreDesc === \"more\" ? \"-\" : \"+\" }</button>\r\n            </div>\r\n            <div className={`description-container ${moreDesc}`}>\r\n            {description.map((item, index) => item !== false &&\r\n                <div key={index} className=\"description-language\">\r\n                    <h4>From {item.version.name} version</h4>\r\n                    <p>{item.flavor_text}</p>\r\n                    \r\n            </div>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nfunction Sprites() {\r\n    const sprites_arr = Object.keys(sprites);\r\n    return (\r\n        <div className=\"sprites-container\">\r\n        {sprites_arr.map((item, index) => \r\n            (sprites[item] !== Object(sprites[item]) && sprites[item] !== null) && <img key={index} alt={`${name} ${item}`} src={sprites[item]} />           \r\n)}\r\n    </div>\r\n    );\r\n}\r\n\r\nfunction Types() {\r\n    return (\r\n        <div className=\"pokemon-types\">\r\n            { \r\n               types.map((item, index) => item.name !== null && <span className={item.name} key={index}>{item.name} </span>)\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Moves() {\r\n    return (\r\n        <div className=\"moves-container\">\r\n            <div className=\"title\">\r\n                <h2>Moves</h2> <button onClick={() => moreMoves !== \"more\" ? setMoreMoves(\"more\") : setMoreMoves(null)}>\r\n                {moreMoves === \"more\" ? \"-\" : \"+\" } </button>\r\n            </div>\r\n            <ul className={`moves-list ${moreMoves}`}>\r\n                {   \r\n                    moves.map((item,index) => \r\n                        <li key={index}>{item.name}</li>\r\n                    )\r\n                    \r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nfunction Items() {\r\n    if (items.length > 0) {\r\n    return (\r\n        <div className=\"items-container\">\r\n            <h2>Held Items</h2>\r\n            <ul>\r\n            {\r\n                items.map((item,index) => <li key={index}>{item.name} </li>)\r\n            }\r\n            </ul>\r\n        </div>\r\n    );\r\n        } else {\r\n            return (\r\n                <div className=\"items-container\">\r\n            <h2>Held Items</h2>\r\n                <p>No items held during capture...</p>\r\n        </div>\r\n            );\r\n        }\r\n}\r\n    return(\r\n        <div className=\"pokemon-container\">\r\n            <div className=\"pokemon-infos\">\r\n                <div className=\"basic-infos\">\r\n                        <h1 className=\"pokemon-name\">{ match.params.id }</h1>\r\n                        <div className=\"nav\">\r\n                        <Evolutions/>\r\n                        <Sprites/>\r\n                        </div>\r\n                </div>\r\n                <div className=\"more-infos\">\r\n                    <PokemonInfos/>\r\n                    <Items />\r\n                    <Moves  />\r\n                </div>\r\n                <PokemonDescription  />\r\n            </div>\r\n           \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pokemon;","import {BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\r\n\r\nimport './Home.css';\r\nimport Pokedex from './Pokedex.js';\r\nimport Pokemon from './Pokemon.js';\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"Home\">\r\n    <Router>\r\n      <header>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n          <a className=\"navbar-brand\" href=\"#\">Pokédex-Online</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\">Pokedex</a>\r\n              </li>\r\n            </ul>\r\n        \r\n          </div>\r\n        </nav>\r\n      </header>\r\n      <Switch>\r\n        <Route exact path='/' component={Pokedex} />\r\n        <Route path={`/pokemon/:id`} component={Pokemon} />\r\n      </Switch>\r\n    </Router>\r\n  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Home from './Home';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Home />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}